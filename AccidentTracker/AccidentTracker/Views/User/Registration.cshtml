@model AccidentTracker.Models.User

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Registration</h2>

@if(ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if(ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Success!</strong>@ViewBag.Message
        </div>
    } 
}
else
{
    using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
    
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true)

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName)
                    @Html.ValidationMessageFor(model => model.FirstName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName,new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName)
                    @Html.ValidationMessageFor(model => model.LastName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.uMobile, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.uMobile)
                    @Html.ValidationMessageFor(model => model.uMobile)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.uEmail, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationSummary(true)
                    @Html.EditorFor(model => model.uEmail)
                    @Html.ValidationMessageFor(model => model.uEmail)
                    @Html.ValidationMessage("EmailExist")
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfBirth)
                    @Html.ValidationMessageFor(model => model.DateOfBirth)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.rMobile, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.rMobile)
                    @Html.ValidationMessageFor(model => model.rMobile)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.rEmail, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.rEmail)
                    @Html.ValidationMessageFor(model => model.rEmail)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserID, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationSummary(true)
                    @Html.EditorFor(model => model.UserID)
                    @Html.ValidationMessageFor(model => model.UserID)
                    @Html.ValidationMessage("UserIDExist")
                    @Html.ValidationMessage("UserIDInvalid")
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password)
                    @Html.ValidationMessageFor(model => model.Password)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword)
                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Register" class="btn btn-default" />
                </div>
            </div>

            <hr />
        </div>
        
        if(ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Error!</strong>@ViewBag.Message
            </div>
        }
    }    
}


<div>
    @Html.ActionLink("Login", "Login")
</div>


@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrustive.min.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
}
